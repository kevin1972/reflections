How did viewing a diff between two versions of a file help you see the bug that was introduced?
Isolated the potential areas where the problem could be
proved to be a mini code review

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
allows you to see the types of changes
allows you to view recent changes that could have impacted the system
encourages you to review changes since it's easy

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
PROS
logical grouping of commits
only commit whats logical/appropriate


CONS
may wait too long between commits
may forget to commit
commit sizes may be to big


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Allowing multiple files groups them logically
Tracking individual files reflects specfic changes


How can you use the commands git log and git diff to view the history of files?
You can use git log to view all of the commits and get their ids. Next, you can use git diff to view the differences between commits

How might using version control make you more confident to make changes that could break something?
Allows you to be more confident knowing that you can undo changes
Will be more likely to try new things
More likely to commit more often

Now that you have your workspace set up, what do you want to try using Git for?
I want to provide version control for personal learning projects
I want to be able to work on other peoples projects that use version control
I want to see if Git is feasible for use at work
